{"version":3,"file":"textfield.component.js","sourceRoot":"","sources":["textfield.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsD,eAAe,CAAC,CAAA;AAwBtE;IAAA;QAGc,gBAAW,GAAyB,IAAI,mBAAY,EAAE,CAAC;IAKrE,CAAC;IAHG,kCAAW,GAAX,UAAY,UAAiB;QACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAND;QAAC,YAAK,EAAE;;qDAAA;IACR;QAAC,YAAK,EAAE;;+CAAA;IACR;QAAC,aAAM,EAAE;;qDAAA;IAzBb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,0IAIT;YACD,MAAM,EAAE,CAAC,+VAYR,CAAC;SACL,CAAC;;oBAAA;IAUF,mBAAC;AAAD,CAAC,AARD,IAQC;AARY,oBAAY,eAQxB,CAAA","sourcesContent":["import { Component, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n    selector: 'box-text-field',\n    template: `\n    <input class=\"box-text-field\"\n        [placeholder]=\"placeholder\"\n        #field (keyup)=\"handleKeyup(field.value)\">\n    `,\n    styles: [`\n        .box-text-field {\n            border-radius: 3px;\n            border: 1px solid #ccc;\n            box-sizing:border-box;\n            display: inline-block;\n            font-size: inherit;\n            font-weight:inherit;\n            height: 2.5rem;\n            margin-bottom: 1rem;\n            padding: .5rem;    \n        }\n    `]\n})\n\nexport class Boxtextfield {\n    @Input() private placeholder: string;\n    @Input() value: string; \n    @Output() valueChange: EventEmitter<string> = new EventEmitter();\n    \n    handleKeyup(fieldValue:string):void{\n        this.valueChange.emit(fieldValue);\n    }\n}\n"]}