{"version":3,"file":"animals.service.js","sourceRoot":"","sources":["animals.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,6CAA6C;AAC7C,qBAAqC,eAAe,CAAC,CAAA;AAIrD;IAEE,wBAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAAG,CAAC;IAHtC;QAAC,iBAAU,EAAE;;sBAAA;IAsBb,qBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,sBAAc,iBAqB1B,CAAA;AAED,IAAM,WAAW,GAAc;IAC7B,EAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,gCAAgC,EAAE,MAAM,EAAE,EAAE,EAAC;IAC1E,EAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,iCAAiC,EAAE,MAAM,EAAE,EAAE,EAAE;IAC5E,EAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,iCAAiC,EAAE,MAAM,EAAE,EAAE,EAAE;CAC5E,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\n//import { Injectable } from 'angular2/core';\nimport {URLSearchParams, Jsonp} from '@angular/http';\nimport { Animals } from './animals.model';\n\n@Injectable()\nexport class AnimalsService {\n\n  constructor(private jsonp: Jsonp) {}\n\n  \n   /*\n   \n   search (term: string) {\n    var search = new URLSearchParams()\n    search.set('action', 'opensearch');\n    search.set('search', term);\n    search.set('format', 'json');\n    return this.jsonp\n                .get('http://en.wikipedia.org/w/api.php?callback=JSONP_CALLBACK', { search })\n                .subscribe\n   }\n  getAnimals(): Promise<Planets[]>{\n    return Promise.resolve(ANIMALSDATA);\n  }\n  */\n  \n}\n\nconst ANIMALSDATA: Animals[] = [\n  {name: 'Panda', description: '88 earth days to orbit the sun', imgurl: ''},\n  {name: 'Tiger', description: '225 earth days to orbit the sun', imgurl: '' },\n  {name: 'Monkey', description: '365 earth days to orbit the sun', imgurl: '' },\n  ];"]}