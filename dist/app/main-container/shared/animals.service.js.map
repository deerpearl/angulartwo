{"version":3,"file":"animals.service.js","sourceRoot":"","sources":["animals.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAI3C,qBAA8B,eAC9B,CAAC,CAD4C;AAC7C,qBAAwC,eAAe,CAAC,CAAA;AACxD,2BAA2B,iBAE3B,CAAC,CAF2C;AAC5C,gDAAgD;AAChD,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,yBAAyB,CAAC,CAAA;AAIjC;IAEE,wBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAEtB,cAAS,GAAG,wCAAwC,CAAC,CAAE,iBAAiB;IAF/C,CAAC;IAIlC,mCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aACnB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAEO,oCAAW,GAAnB,UAAoB,GAAa;QAC/B,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAG,CAAC;IAC1B,CAAC;IACO,oCAAW,GAAnB,UAAqB,KAAU;QAC7B,oEAAoE;QACpE,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,cAAc,CAAC;QAC7C,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,kCAAS,GAAT,UAAW,IAAY;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,MAAA,IAAI,EAAE,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC;aACnC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAnCH;QAAC,iBAAU,EAAE;;sBAAA;IAyDb,qBAAC;AAAD,CAAC,AAxDD,IAwDC;AAxDY,sBAAc,iBAwD1B,CAAA;AACD;;;;;;IAMI","sourcesContent":["import { Injectable } from '@angular/core';\n//import { Injectable } from 'angular2/core';\nimport {URLSearchParams, Jsonp} from '@angular/http';\nimport { Animals } from './animals.model';\nimport { Http, Response} from '@angular/http'\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable'\n//https://github.com/angular/angular/issues/5632\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n\n@Injectable()\nexport class AnimalsService {\n\n  constructor(private http: Http) {}\n  \n  private heroesUrl = 'app/main-container/shared/animals.json';  // URL to web API\n  \n  getAnimals (): Observable<Animals[]> {\n    return this.http.get(this.heroesUrl)\n                    .map(this.extractData)\n                    .catch(this.handleError);\n  }\n  \n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Response status: ' + res.status);\n    }\n    let body = res.json();\n    return body.data || { };\n  }\n  private handleError (error: any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg = error.message || 'Server error';\n    console.error(errMsg); // log to console instead\n    return Observable.throw(errMsg);\n  }\n  \n  addAnimal (name: string): Observable<Animals> { \n    let body = JSON.stringify({ name });\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(this.heroesUrl, body, options)\n                    .map(this.extractData)\n                    .catch(this.handleError);\n  }\n  \n /* \n  constructor(private jsonp: Jsonp) {}\n  search (term: string) {\n    var search = new URLSearchParams()\n    search.set('action', 'opensearch');\n    search.set('search', term);\n    search.set('format', 'json');\n    return this.jsonp\n                .get('http://en.wikipedia.org/w/api.php?callback=JSONP_CALLBACK', { search })\n                .subscribe(\n                   res => {},\n                   err => {}\n                );\n   }\n   \n  getAnimals(): Promise<Planets[]>{\n    return Promise.resolve(ANIMALSDATA);\n  }\n  */\n  \n}\n/*\nconst ANIMALSDATA: Animals[] = [\n  {name: 'Panda', description: '88 earth days to orbit the sun', imgurl: ''},\n  {name: 'Tiger', description: '225 earth days to orbit the sun', imgurl: '' },\n  {name: 'Monkey', description: '365 earth days to orbit the sun', imgurl: '' },\n  ];\n  */"]}